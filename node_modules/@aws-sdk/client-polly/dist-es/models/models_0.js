import { __assign, __extends } from "tslib";
import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { PollyServiceException as __BaseException } from "./PollyServiceException";
export var DeleteLexiconInput;
(function (DeleteLexiconInput) {
    DeleteLexiconInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(DeleteLexiconInput || (DeleteLexiconInput = {}));
export var DeleteLexiconOutput;
(function (DeleteLexiconOutput) {
    DeleteLexiconOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(DeleteLexiconOutput || (DeleteLexiconOutput = {}));
var LexiconNotFoundException = (function (_super) {
    __extends(LexiconNotFoundException, _super);
    function LexiconNotFoundException(opts) {
        var _this = _super.call(this, __assign({ name: "LexiconNotFoundException", $fault: "client" }, opts)) || this;
        _this.name = "LexiconNotFoundException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, LexiconNotFoundException.prototype);
        return _this;
    }
    return LexiconNotFoundException;
}(__BaseException));
export { LexiconNotFoundException };
var ServiceFailureException = (function (_super) {
    __extends(ServiceFailureException, _super);
    function ServiceFailureException(opts) {
        var _this = _super.call(this, __assign({ name: "ServiceFailureException", $fault: "server" }, opts)) || this;
        _this.name = "ServiceFailureException";
        _this.$fault = "server";
        Object.setPrototypeOf(_this, ServiceFailureException.prototype);
        return _this;
    }
    return ServiceFailureException;
}(__BaseException));
export { ServiceFailureException };
export var Engine;
(function (Engine) {
    Engine["NEURAL"] = "neural";
    Engine["STANDARD"] = "standard";
})(Engine || (Engine = {}));
export var DescribeVoicesInput;
(function (DescribeVoicesInput) {
    DescribeVoicesInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(DescribeVoicesInput || (DescribeVoicesInput = {}));
export var Voice;
(function (Voice) {
    Voice.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(Voice || (Voice = {}));
export var DescribeVoicesOutput;
(function (DescribeVoicesOutput) {
    DescribeVoicesOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(DescribeVoicesOutput || (DescribeVoicesOutput = {}));
var InvalidNextTokenException = (function (_super) {
    __extends(InvalidNextTokenException, _super);
    function InvalidNextTokenException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidNextTokenException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidNextTokenException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidNextTokenException.prototype);
        return _this;
    }
    return InvalidNextTokenException;
}(__BaseException));
export { InvalidNextTokenException };
var EngineNotSupportedException = (function (_super) {
    __extends(EngineNotSupportedException, _super);
    function EngineNotSupportedException(opts) {
        var _this = _super.call(this, __assign({ name: "EngineNotSupportedException", $fault: "client" }, opts)) || this;
        _this.name = "EngineNotSupportedException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, EngineNotSupportedException.prototype);
        return _this;
    }
    return EngineNotSupportedException;
}(__BaseException));
export { EngineNotSupportedException };
export var GetLexiconInput;
(function (GetLexiconInput) {
    GetLexiconInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(GetLexiconInput || (GetLexiconInput = {}));
export var Lexicon;
(function (Lexicon) {
    Lexicon.filterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.Content && { Content: SENSITIVE_STRING }))); };
})(Lexicon || (Lexicon = {}));
export var LexiconAttributes;
(function (LexiconAttributes) {
    LexiconAttributes.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(LexiconAttributes || (LexiconAttributes = {}));
export var GetLexiconOutput;
(function (GetLexiconOutput) {
    GetLexiconOutput.filterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.Lexicon && { Lexicon: Lexicon.filterSensitiveLog(obj.Lexicon) }))); };
})(GetLexiconOutput || (GetLexiconOutput = {}));
export var GetSpeechSynthesisTaskInput;
(function (GetSpeechSynthesisTaskInput) {
    GetSpeechSynthesisTaskInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(GetSpeechSynthesisTaskInput || (GetSpeechSynthesisTaskInput = {}));
export var OutputFormat;
(function (OutputFormat) {
    OutputFormat["JSON"] = "json";
    OutputFormat["MP3"] = "mp3";
    OutputFormat["OGG_VORBIS"] = "ogg_vorbis";
    OutputFormat["PCM"] = "pcm";
})(OutputFormat || (OutputFormat = {}));
export var SpeechMarkType;
(function (SpeechMarkType) {
    SpeechMarkType["SENTENCE"] = "sentence";
    SpeechMarkType["SSML"] = "ssml";
    SpeechMarkType["VISEME"] = "viseme";
    SpeechMarkType["WORD"] = "word";
})(SpeechMarkType || (SpeechMarkType = {}));
export var TaskStatus;
(function (TaskStatus) {
    TaskStatus["COMPLETED"] = "completed";
    TaskStatus["FAILED"] = "failed";
    TaskStatus["IN_PROGRESS"] = "inProgress";
    TaskStatus["SCHEDULED"] = "scheduled";
})(TaskStatus || (TaskStatus = {}));
export var TextType;
(function (TextType) {
    TextType["SSML"] = "ssml";
    TextType["TEXT"] = "text";
})(TextType || (TextType = {}));
export var SynthesisTask;
(function (SynthesisTask) {
    SynthesisTask.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(SynthesisTask || (SynthesisTask = {}));
export var GetSpeechSynthesisTaskOutput;
(function (GetSpeechSynthesisTaskOutput) {
    GetSpeechSynthesisTaskOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(GetSpeechSynthesisTaskOutput || (GetSpeechSynthesisTaskOutput = {}));
var InvalidTaskIdException = (function (_super) {
    __extends(InvalidTaskIdException, _super);
    function InvalidTaskIdException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidTaskIdException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidTaskIdException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidTaskIdException.prototype);
        return _this;
    }
    return InvalidTaskIdException;
}(__BaseException));
export { InvalidTaskIdException };
var SynthesisTaskNotFoundException = (function (_super) {
    __extends(SynthesisTaskNotFoundException, _super);
    function SynthesisTaskNotFoundException(opts) {
        var _this = _super.call(this, __assign({ name: "SynthesisTaskNotFoundException", $fault: "client" }, opts)) || this;
        _this.name = "SynthesisTaskNotFoundException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, SynthesisTaskNotFoundException.prototype);
        return _this;
    }
    return SynthesisTaskNotFoundException;
}(__BaseException));
export { SynthesisTaskNotFoundException };
var InvalidLexiconException = (function (_super) {
    __extends(InvalidLexiconException, _super);
    function InvalidLexiconException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidLexiconException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidLexiconException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidLexiconException.prototype);
        return _this;
    }
    return InvalidLexiconException;
}(__BaseException));
export { InvalidLexiconException };
var InvalidS3BucketException = (function (_super) {
    __extends(InvalidS3BucketException, _super);
    function InvalidS3BucketException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidS3BucketException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidS3BucketException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidS3BucketException.prototype);
        return _this;
    }
    return InvalidS3BucketException;
}(__BaseException));
export { InvalidS3BucketException };
var InvalidS3KeyException = (function (_super) {
    __extends(InvalidS3KeyException, _super);
    function InvalidS3KeyException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidS3KeyException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidS3KeyException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidS3KeyException.prototype);
        return _this;
    }
    return InvalidS3KeyException;
}(__BaseException));
export { InvalidS3KeyException };
var InvalidSampleRateException = (function (_super) {
    __extends(InvalidSampleRateException, _super);
    function InvalidSampleRateException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidSampleRateException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidSampleRateException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidSampleRateException.prototype);
        return _this;
    }
    return InvalidSampleRateException;
}(__BaseException));
export { InvalidSampleRateException };
var InvalidSnsTopicArnException = (function (_super) {
    __extends(InvalidSnsTopicArnException, _super);
    function InvalidSnsTopicArnException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidSnsTopicArnException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidSnsTopicArnException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidSnsTopicArnException.prototype);
        return _this;
    }
    return InvalidSnsTopicArnException;
}(__BaseException));
export { InvalidSnsTopicArnException };
var InvalidSsmlException = (function (_super) {
    __extends(InvalidSsmlException, _super);
    function InvalidSsmlException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidSsmlException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidSsmlException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidSsmlException.prototype);
        return _this;
    }
    return InvalidSsmlException;
}(__BaseException));
export { InvalidSsmlException };
var LanguageNotSupportedException = (function (_super) {
    __extends(LanguageNotSupportedException, _super);
    function LanguageNotSupportedException(opts) {
        var _this = _super.call(this, __assign({ name: "LanguageNotSupportedException", $fault: "client" }, opts)) || this;
        _this.name = "LanguageNotSupportedException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, LanguageNotSupportedException.prototype);
        return _this;
    }
    return LanguageNotSupportedException;
}(__BaseException));
export { LanguageNotSupportedException };
export var LexiconDescription;
(function (LexiconDescription) {
    LexiconDescription.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(LexiconDescription || (LexiconDescription = {}));
var LexiconSizeExceededException = (function (_super) {
    __extends(LexiconSizeExceededException, _super);
    function LexiconSizeExceededException(opts) {
        var _this = _super.call(this, __assign({ name: "LexiconSizeExceededException", $fault: "client" }, opts)) || this;
        _this.name = "LexiconSizeExceededException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, LexiconSizeExceededException.prototype);
        return _this;
    }
    return LexiconSizeExceededException;
}(__BaseException));
export { LexiconSizeExceededException };
export var ListLexiconsInput;
(function (ListLexiconsInput) {
    ListLexiconsInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(ListLexiconsInput || (ListLexiconsInput = {}));
export var ListLexiconsOutput;
(function (ListLexiconsOutput) {
    ListLexiconsOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(ListLexiconsOutput || (ListLexiconsOutput = {}));
export var ListSpeechSynthesisTasksInput;
(function (ListSpeechSynthesisTasksInput) {
    ListSpeechSynthesisTasksInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(ListSpeechSynthesisTasksInput || (ListSpeechSynthesisTasksInput = {}));
export var ListSpeechSynthesisTasksOutput;
(function (ListSpeechSynthesisTasksOutput) {
    ListSpeechSynthesisTasksOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(ListSpeechSynthesisTasksOutput || (ListSpeechSynthesisTasksOutput = {}));
var MarksNotSupportedForFormatException = (function (_super) {
    __extends(MarksNotSupportedForFormatException, _super);
    function MarksNotSupportedForFormatException(opts) {
        var _this = _super.call(this, __assign({ name: "MarksNotSupportedForFormatException", $fault: "client" }, opts)) || this;
        _this.name = "MarksNotSupportedForFormatException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, MarksNotSupportedForFormatException.prototype);
        return _this;
    }
    return MarksNotSupportedForFormatException;
}(__BaseException));
export { MarksNotSupportedForFormatException };
var MaxLexemeLengthExceededException = (function (_super) {
    __extends(MaxLexemeLengthExceededException, _super);
    function MaxLexemeLengthExceededException(opts) {
        var _this = _super.call(this, __assign({ name: "MaxLexemeLengthExceededException", $fault: "client" }, opts)) || this;
        _this.name = "MaxLexemeLengthExceededException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, MaxLexemeLengthExceededException.prototype);
        return _this;
    }
    return MaxLexemeLengthExceededException;
}(__BaseException));
export { MaxLexemeLengthExceededException };
var MaxLexiconsNumberExceededException = (function (_super) {
    __extends(MaxLexiconsNumberExceededException, _super);
    function MaxLexiconsNumberExceededException(opts) {
        var _this = _super.call(this, __assign({ name: "MaxLexiconsNumberExceededException", $fault: "client" }, opts)) || this;
        _this.name = "MaxLexiconsNumberExceededException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, MaxLexiconsNumberExceededException.prototype);
        return _this;
    }
    return MaxLexiconsNumberExceededException;
}(__BaseException));
export { MaxLexiconsNumberExceededException };
export var PutLexiconInput;
(function (PutLexiconInput) {
    PutLexiconInput.filterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.Content && { Content: SENSITIVE_STRING }))); };
})(PutLexiconInput || (PutLexiconInput = {}));
export var PutLexiconOutput;
(function (PutLexiconOutput) {
    PutLexiconOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(PutLexiconOutput || (PutLexiconOutput = {}));
var UnsupportedPlsAlphabetException = (function (_super) {
    __extends(UnsupportedPlsAlphabetException, _super);
    function UnsupportedPlsAlphabetException(opts) {
        var _this = _super.call(this, __assign({ name: "UnsupportedPlsAlphabetException", $fault: "client" }, opts)) || this;
        _this.name = "UnsupportedPlsAlphabetException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, UnsupportedPlsAlphabetException.prototype);
        return _this;
    }
    return UnsupportedPlsAlphabetException;
}(__BaseException));
export { UnsupportedPlsAlphabetException };
var UnsupportedPlsLanguageException = (function (_super) {
    __extends(UnsupportedPlsLanguageException, _super);
    function UnsupportedPlsLanguageException(opts) {
        var _this = _super.call(this, __assign({ name: "UnsupportedPlsLanguageException", $fault: "client" }, opts)) || this;
        _this.name = "UnsupportedPlsLanguageException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, UnsupportedPlsLanguageException.prototype);
        return _this;
    }
    return UnsupportedPlsLanguageException;
}(__BaseException));
export { UnsupportedPlsLanguageException };
var SsmlMarksNotSupportedForTextTypeException = (function (_super) {
    __extends(SsmlMarksNotSupportedForTextTypeException, _super);
    function SsmlMarksNotSupportedForTextTypeException(opts) {
        var _this = _super.call(this, __assign({ name: "SsmlMarksNotSupportedForTextTypeException", $fault: "client" }, opts)) || this;
        _this.name = "SsmlMarksNotSupportedForTextTypeException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, SsmlMarksNotSupportedForTextTypeException.prototype);
        return _this;
    }
    return SsmlMarksNotSupportedForTextTypeException;
}(__BaseException));
export { SsmlMarksNotSupportedForTextTypeException };
export var StartSpeechSynthesisTaskInput;
(function (StartSpeechSynthesisTaskInput) {
    StartSpeechSynthesisTaskInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(StartSpeechSynthesisTaskInput || (StartSpeechSynthesisTaskInput = {}));
export var StartSpeechSynthesisTaskOutput;
(function (StartSpeechSynthesisTaskOutput) {
    StartSpeechSynthesisTaskOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(StartSpeechSynthesisTaskOutput || (StartSpeechSynthesisTaskOutput = {}));
var TextLengthExceededException = (function (_super) {
    __extends(TextLengthExceededException, _super);
    function TextLengthExceededException(opts) {
        var _this = _super.call(this, __assign({ name: "TextLengthExceededException", $fault: "client" }, opts)) || this;
        _this.name = "TextLengthExceededException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, TextLengthExceededException.prototype);
        return _this;
    }
    return TextLengthExceededException;
}(__BaseException));
export { TextLengthExceededException };
export var SynthesizeSpeechInput;
(function (SynthesizeSpeechInput) {
    SynthesizeSpeechInput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(SynthesizeSpeechInput || (SynthesizeSpeechInput = {}));
export var SynthesizeSpeechOutput;
(function (SynthesizeSpeechOutput) {
    SynthesizeSpeechOutput.filterSensitiveLog = function (obj) { return (__assign({}, obj)); };
})(SynthesizeSpeechOutput || (SynthesizeSpeechOutput = {}));
