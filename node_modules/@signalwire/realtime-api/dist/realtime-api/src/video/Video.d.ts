import { BaseComponentOptions, ConsumerContract, RoomSessionRecording, RoomSessionPlayback } from '@signalwire/core';
import type { RealtimeClient } from '../client/Client';
import { RealTimeVideoApiEvents } from '../types/video';
import { RoomSession, RoomSessionFullState } from './RoomSession';
import type { RoomSessionMember } from './RoomSessionMember';
export interface Video extends ConsumerContract<RealTimeVideoApiEvents> {
    /** @internal */
    subscribe(): Promise<void>;
    /** @internal */
    _session: RealtimeClient;
    getRoomSessions(): Promise<{
        roomSessions: RoomSession[];
    }>;
    getRoomSessionById(id: string): Promise<{
        roomSession: RoomSession;
    }>;
}
export type { RoomSession, RoomSessionFullState, RoomSessionMember, RoomSessionRecording, RoomSessionPlayback, };
/** @internal */
export declare const createVideoObject: (params: BaseComponentOptions<RealTimeVideoApiEvents>) => Video;
export * from './VideoClient';
//# sourceMappingURL=Video.d.ts.map